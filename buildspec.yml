version: 0.2

env:
  variables:
  # Project: "DE3P14_Dee_Transport_clouddevops"
  # HOST: "http://sonarcloud.io"
  # SONARCLOUD_TOKEN: "eea5996cf401092a90def01df27804a760cdddb1"
  # PYLINT_THRESHOLD: "8.0" # Define a minimum acceptable pylint score

phases:
  install:
    commands:
    - dnf update -y
    - dnf install -y python3-pip
    # Install virtualenv to isolate the build environment
    - pip3 install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install django djangorestframework pylint
    - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
    - unzip sonar-scanner-cli-4.6.2.2472-linux.zip
    - export PATH=$PATH:$(pwd)/sonar-scanner-4.6.2.2472-linux/bin

  pre_build:
    commands:
    - pip install -r requirements.txt

  build:
    commands:
    - python manage.py test
    - pylint --exit-zero --output-format=text busapp managements > pylint_report.txt
    # Use Docker to run SonarScanner
    - ""
#       docker run  --rm  -e SONAR_HOST_URL="$HOST"  -e SONAR_LOGIN="$LOGIN"  -v $(pwd):/usr/src  sonarsource/sonar-scanner-cli  -Dsonar.projectKey=$Project  -Dsonar.organization=$Organization  -Dsonar.sources=.  -Dsonar.python.pylint.reportPaths=pylint_report.txt #magic___^_^___line
# # You may define artifacts as needed
artifacts:
  files:
  - '**/*'
