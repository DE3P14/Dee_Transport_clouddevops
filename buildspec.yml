version: 0.2

env:
  variables:
    Organization_key: "de3p14"
    project_key: "devsecopsexplore"
    HOST: "http://sonarcloud.io"
    SONARCLOUD_TOKEN: "d699c3082be36f4d390366febfbf2dc6be55cd91"
    PYLINT_THRESHOLD: "8.0" # Define a minimum acceptable pylint score

phases:
  install:
    commands:
    - yum update -y
    - yum install -y python3-pip
    - pip3 install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install django djangorestframework pylint
    - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
    - unzip sonar-scanner-cli-4.6.2.2472-linux.zip
    - export PATH=$PATH:$(pwd)/sonar-scanner-4.6.2.2472-linux/bin
    - sonar-scanner --version

  pre_build:
    commands:
    - pip install -r requirements.txt
    - pylint --exit-zero --output-format=text busapp managements > pylint_report.txt
    - cat pylint_report.txt
    - PYLINT_SCORE=$(cat pylint_report.txt | grep 'Your code has been rated at' | grep -o -E '[0-9]+[.]?[0-9]?')
    - echo "Pylint Score: $PYLINT_SCORE"
    - if [ $(echo "$PYLINT_SCORE < $PYLINT_THRESHOLD" | bc) -eq 1 ]; then echo "Pylint score is below threshold"; exit 1; fi


  build:
    commands:
    # - python manage.py test
    # SonarQube Analysis
    - >
      sonar-scanner -Dsonar.projectKey=$project_key -Dsonar.organization=$Organization_key -Dsonar.sources=. -Dsonar.host.url=$HOST -Dsonar.login=$SONARCLOUD_TOKEN -Dsonar.python.pylint.reportPaths=pylint_report.txt #magic___^_^___line
artifacts:
  files:
  - '**/*'
